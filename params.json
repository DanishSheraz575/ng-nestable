{"name":"angular-nestable","tagline":"Angular module for jQuery nestable plugin","body":"angular-nestable 0.0.1\r\n=================\r\n\r\n###DEMO:\r\ncheck out the demo [here](http://kamilkp.github.io/ng-nestable)\r\n\r\n###DESCRIPTION:\r\n`angular-nestable` is a module for [AngularJS](https://angularjs.org) that uses the [jQuery nestable plugin](https://github.com/dbushell/Nestable) to create multi-sortable lists with the ability to nest items within each other.\r\n\r\n###USAGE:\r\n\r\n```html\r\n<div ng-nestable ng-model=\"items\">\r\n\t<div>\r\n\t\t<!-- this element is the template for each menu item -->\r\n\t\t<!-- the $item is available on scope and is the reference to the menu item object -->\r\n\t\t{{$item}}\r\n\t</div>\r\n</div>\r\n```\r\n\r\nExample `items` object structure:\r\n\r\n```javascript\r\n[\r\n\t{\r\n\t\titem: {}, // this object will be referenced as the $item on scope\r\n\t\tchildren: []\r\n\t},\r\n\t{\r\n\t\titem: {},\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\titem: {},\r\n\t\t\t\tchildren: []\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\titem: {},\r\n\t\tchildren: []\r\n\t}\r\n]\r\n```\r\n\r\nEach nestable element in the DOM gets it's own non-isolated scope just like with `ng-repeat`.\r\n\r\nAlso the options object can be passed to the directive as the `ng-nestable` attribute. Those options will be passed to the jQuery `nestable` function when creating a nestable.\r\n\r\n===\r\n\r\nThe module also exposes a `$nestableProvider` that can be injected into a `config` block. It provides two methods:\r\n\r\n * `$nestableProvider.modelName(str)` - can be used to set the model name variable inside each nestable element. The default value of model name is `$item`.\r\n * `$nestableProvider.defaultOptions(obj)` - can be used to set some default options for the nestable jquery plugin. Those options include the following: (extract from the [jQuery nestable](https://github.com/dbushell/Nestable) readme)\r\n\r\n\t\tmaxDepth        : number of levels an item can be nested (default 5)\r\n\t\tgroup           : group ID to allow dragging between lists (default 0)\r\n\r\n\t\tlistNodeName    : The HTML element to create for lists (default 'ol')\r\n\t\titemNodeName    : The HTML element to create for list items (default 'li')\r\n\t\trootClass       : The class of the root element .nestable() was used on (default 'dd')\r\n\t\tlistClass       : The class of all list elements (default 'dd-list')\r\n\t\titemClass       : The class of all list item elements (default 'dd-item')\r\n\t\tdragClass       : The class applied to the list element that is being dragged (default 'dd-dragel')\r\n\t\thandleClass     : The class of the content element inside each list item (default 'dd-handle')\r\n\t\tcollapsedClass  : The class applied to lists that have been collapsed (default 'dd-collapsed')\r\n\t\tplaceClass      : The class of the placeholder element (default 'dd-placeholder')\r\n\t\temptyClass      : The class used for empty list placeholder elements (default 'dd-empty')\r\n\t\texpandBtnHTML   : The HTML text used to generate a list item expand button (default '<button data-action=\"expand\">Expand></button>')\r\n\t\tcollapseBtnHTML : The HTML text used to generate a list item collapse button (default '<button data-action=\"collapse\">Collapse</button>')\r\n\t\t\r\n===\r\n\r\nAlso note that the `ng-sortable` directive uses [ngModelController](https://docs.angularjs.org/api/ng/type/ngModel.NgModelController) to read and write to the provided model object and is fully compliant with `$formatters` and `$parsers`.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}